nu==10^-6,
nu==10^-4))+
facet_grid(.~sigma, labeller = labeller(sigma=sigma_names))+
scale_linetype_manual("Actual long-term\noutcome (best case)",
breaks=c("Actual long-term\noutcome (best case)"),
labels=c(""),
values=c("dotted")) +
guides(linetype=guide_legend(override.aes=list(colour="black")))+
theme(aspect.ratio=1, legend.key.size = unit(1.5, 'lines'))
print(p)
source('~/Documents/PhD/Code/NeutralScalingFragmentation/extinction_debt_eco_let/figure_generation.R', echo=TRUE)
px <- ggplot(variable_size_data, colour="black") +
theme_classic() +
geom_ribbon(data=real_bounds,
aes(x=a_max, ymin=min_real_pc, ymax=max_real_pc,
fill="Real landscapes"),  alpha=0.6)+
geom_point(aes(x=a_max, y=100*mean_richness/contig_richness, colour=effective_connectivity))+
geom_point(data=highlighted_sims,
aes(x=a_max, y=100*mean_richness/contig_richness,
colour=effective_connectivity), shape=17, alpha=1, size=3)+
geom_line(aes(x=a_max, y=max_pc_eq, linetype="Upper"),
colour="grey20", size=1) +
geom_line(aes(x=a_max, y=min_pc_eq, linetype="Lower"), colour="grey20", size=1) +
ylab("Percentage of species\nrichness at equilibrium")+
scale_x_log10(expression(paste("Total area (", A[max], ")")),limits=c(10^2.5, 10^8),
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x)))+
scale_fill_manual("", label=c("Real\nlandscapes"), values=c("grey80"))+
scale_linetype_manual("Theoretical\nlimits",breaks=c("Upper", "Lower"),
label=c("Upper", "Lower"), values=c("dotted", "dashed"))+
guides(linetype=guide_legend(keywidth = 2.5))+
scale_colour_viridis(expression(paste("Effective\nConnectivity (", c[e], ")")),
option="inferno", end=0.94)+
theme( aspect.ratio = 1)
pdf(file.path(figure_dir, "figure4.pdf"), 4.33, 4)
print(px)
dev.off()
px <- ggplot(variable_size_data, colour="black") +
theme_classic() +
geom_ribbon(data=real_bounds,
aes(x=a_max, ymin=min_real_pc, ymax=max_real_pc,
fill="Real landscapes"),  alpha=0.6)+
geom_point(aes(x=a_max, y=100*mean_richness/contig_richness, colour=effective_connectivity))+
geom_point(data=highlighted_sims,
aes(x=a_max, y=100*mean_richness/contig_richness,
colour=effective_connectivity), shape=17, alpha=1, size=3)+
geom_line(aes(x=a_max, y=max_pc_eq, linetype="Upper"),
colour="grey20", size=1) +
geom_line(aes(x=a_max, y=min_pc_eq, linetype="Lower"), colour="grey20", size=1) +
ylab("Percentage of species\nrichness at equilibrium")+
scale_x_log10(expression(paste("Total area (", A[max], ")")),limits=c(10^2.5, 10^8),
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x)))+
scale_fill_manual(NULL, label=c("Real\nlandscapes"), values=c("grey80"))+
scale_linetype_manual("Theoretical\nlimits",breaks=c("Upper", "Lower"),
label=c("Upper", "Lower"), values=c("dotted", "dashed"))+
guides(linetype=guide_legend(keywidth = 2.5))+
scale_colour_viridis(expression(paste("Effective\nConnectivity (", c[e], ")")),
option="inferno", end=0.94)+
theme( aspect.ratio = 1)
pdf(file.path(figure_dir, "figure4.pdf"), 4.33, 4)
print(px)
dev.off()
px <- ggplot(variable_size_data, colour="black") +
theme_classic() +
geom_ribbon(data=real_bounds,
aes(x=a_max, ymin=min_real_pc, ymax=max_real_pc,
fill="Real landscapes"),  alpha=0.6)+
geom_point(aes(x=a_max, y=100*mean_richness/contig_richness, colour=effective_connectivity))+
geom_point(data=highlighted_sims,
aes(x=a_max, y=100*mean_richness/contig_richness,
colour=effective_connectivity), shape=17, alpha=1, size=3)+
geom_line(aes(x=a_max, y=max_pc_eq, linetype="Upper"),
colour="grey20", size=1) +
geom_line(aes(x=a_max, y=min_pc_eq, linetype="Lower"), colour="grey20", size=1) +
ylab("Percentage of species\nrichness at equilibrium")+
scale_x_log10(expression(paste("Total area (", A[max], ")")),limits=c(10^2.5, 10^8),
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x)))+
scale_fill_manual(NULL, label=c("Real\nlandscapes"), values=c("grey80"))+
scale_linetype_manual("Theoretical\nlimits",breaks=c("Upper", "Lower"),
label=c("Upper", "Lower"), values=c("dotted", "dashed"))+
guides(linetype=guide_legend(keywidth = 2.5))+
scale_colour_viridis(expression(paste("Effective\nConnectivity (", c[e], ")")),
option="inferno", end=0.94)+
theme( aspect.ratio = 1, legend.position = "bottom")
pdf(file.path(figure_dir, "figure4.pdf"), 4.33, 4)
print(px)
dev.off()
px <- ggplot(variable_size_data, colour="black") +
theme_classic() +
geom_ribbon(data=real_bounds,
aes(x=a_max, ymin=min_real_pc, ymax=max_real_pc,
fill="Real landscapes"),  alpha=0.6)+
geom_point(aes(x=a_max, y=100*mean_richness/contig_richness, colour=effective_connectivity))+
geom_point(data=highlighted_sims,
aes(x=a_max, y=100*mean_richness/contig_richness,
colour=effective_connectivity), shape=17, alpha=1, size=3)+
geom_line(aes(x=a_max, y=max_pc_eq, linetype="Upper"),
colour="grey20", size=1) +
geom_line(aes(x=a_max, y=min_pc_eq, linetype="Lower"), colour="grey20", size=1) +
ylab("Percentage of species\nrichness at equilibrium")+
scale_x_log10(expression(paste("Total area (", A[max], ")")),limits=c(10^2.5, 10^8),
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x)))+
scale_fill_manual(NULL, label=c("Real\nlandscapes"), values=c("grey80"))+
scale_linetype_manual("Theoretical\nlimits",breaks=c("Upper", "Lower"),
label=c("Upper", "Lower"), values=c("dotted", "dashed"))+
guides(linetype=guide_legend(keywidth = 2.5))+
scale_colour_viridis(expression(paste("Effective\nConnectivity (", c[e], ")")),
option="inferno", end=0.94)+
theme( aspect.ratio = 1, legend.position = "bottom", legend.box="vertical")
pdf(file.path(figure_dir, "figure4.pdf"), 4.33, 4)
print(px)
dev.off()
pdf(file.path(figure_dir, "figure4.pdf"), 6.7, 4)
print(px)
dev.off()
px <- ggplot(variable_size_data, colour="black") +
theme_classic() +
geom_ribbon(data=real_bounds,
aes(x=a_max, ymin=min_real_pc, ymax=max_real_pc,
fill="Real landscapes"),  alpha=0.6)+
geom_point(aes(x=a_max, y=100*mean_richness/contig_richness, colour=effective_connectivity))+
geom_point(data=highlighted_sims,
aes(x=a_max, y=100*mean_richness/contig_richness,
colour=effective_connectivity), shape=17, alpha=1, size=3)+
geom_line(aes(x=a_max, y=max_pc_eq, linetype="Upper"),
colour="grey20", size=1) +
geom_line(aes(x=a_max, y=min_pc_eq, linetype="Lower"), colour="grey20", size=1) +
ylab("Percentage of species\nrichness at equilibrium")+
scale_x_log10(expression(paste("Total area (", A[max], ")")),limits=c(10^2.5, 10^8),
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x)))+
scale_fill_manual(NULL, label=c("Real\nlandscapes"), values=c("grey80"))+
scale_linetype_manual("Theoretical\nlimits",breaks=c("Upper", "Lower"),
label=c("Upper", "Lower"), values=c("dotted", "dashed"))+
guides(linetype=guide_legend(keywidth = 2.5))+
scale_colour_viridis(expression(paste("Effective\nConnectivity (", c[e], ")")),
option="inferno", end=0.94)+
theme( aspect.ratio = 1)
pdf(file.path(figure_dir, "figure4.pdf"), 6.7, 4)
print(px)
dev.off()
S_contig
S_contig(500^2, 0.0001, 16^2)
S_contig(0.1*500^2, 0.0001, 16^2)
S_contig(0.1*(500^2), 0.0001, 16^2)
S_contig(0.2*(500^2), 0.0001, 16^2)
S_contig(0.1*(500^2), 0.0001, 16^2)
source('~/Documents/PhD/Code/NeutralScalingFragmentation/extinction_debt_eco_let/figure_generation.R', echo=TRUE)
p <- dummy_df %>% filter(speciation_rate == 1e-7) %>% ggplot(aes(x=sigma)) +
geom_ribbon(aes(ymin=0, ymax=pc_remaining_eq_lower,
fill="Remaining"))+
geom_ribbon(aes(ymin=pc_remaining_eq_lower, ymax=pc_remaining_eq_upper,
fill="Remaining\nor extinction debt"))+
geom_ribbon(aes(ymin=pc_remaining_eq_upper, ymax=pc_remaining_inst_lower,
fill="Extinction debt"))+
geom_ribbon(aes(ymin=pc_remaining_inst_lower, ymax=pc_remaining_inst_upper,
fill="Immediate loss\nor extinction debt"))+
geom_ribbon(aes(ymin=pc_remaining_inst_upper, ymax=100,
fill="Immediate loss"))+
facet_grid(a_max_str ~ pc_cover_str, labeller = labeller(pc_cover_str=percent_cover_names,
a_max_str=a_max_names)) +
scale_x_continuous(expression(paste("Dispersal (", sigma, ")")), trans="log2",
breaks = scales::trans_breaks("log2", function(x) 2^x, n=4)
# labels = scales::trans_format("log2", scales::math_format(2^.x))
) +
scale_y_continuous("Percentage of species richness remaining")+
scale_fill_manual("Scenario", labels=c("Immediate loss",
"Immediate loss\nor extinction debt",
"Extinction debt",
"Remaining\nor extinction debt",
"Remaining"),
breaks=c("Immediate loss",
"Immediate loss\nor extinction debt",
"Extinction debt",
"Remaining\nor extinction debt",
"Remaining"),
# values=c("#FF7F80", "#FFB0B0", "#FCFCFC", "#C8BFFF", "#A997FF"))+
values=c("Immediate loss"=plot_colours[1],
"Immediate loss\nor extinction debt"=plot_colours[3],
"Extinction debt"=plot_colours[7],
"Remaining\nor extinction debt"=plot_colours[9],
"Remaining"=plot_colours[11])) +
theme_classic() + theme(aspect.ratio = 1) +
theme(legend.key.height=unit(2,"line")) +
theme(legend.key.width=unit(2,"line"))
pdf(file.path(figure_dir, "appendices", "appendix3_figure1.pdf"), 7, 5)
print(p)
dev.off()
p <- dummy_df %>% filter(sigma == 16, speciation_rate >= 10^-9) %>% ggplot() +
geom_ribbon(aes(x=speciation_rate, ymin=0, ymax=pc_remaining_eq_lower,
fill="Remaining"))+
geom_ribbon(aes(x=speciation_rate, ymin=pc_remaining_eq_lower, ymax=pc_remaining_eq_upper,
fill="Remaining\nor extinction debt"))+
geom_ribbon(aes(x=speciation_rate, ymin=pc_remaining_eq_upper, ymax=pc_remaining_inst_lower,
fill="Extinction debt"))+
geom_ribbon(aes(x=speciation_rate, ymin=pc_remaining_inst_lower, ymax=pc_remaining_inst_upper,
fill="Immediate loss\nor extinction debt"))+
geom_ribbon(aes(x=speciation_rate, ymin=pc_remaining_inst_upper, ymax=100,
fill="Immediate loss"))+
facet_grid(a_max_str ~ pc_cover_str, labeller = labeller(pc_cover_str=percent_cover_names,
a_max_str=a_max_names)) +
scale_x_log10(expression(paste("Speciation rate (", nu, ")")),
breaks = c(10^-8, 10^-6, 10^-4),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
scale_y_continuous("Percentage of species richness remaining")+
scale_fill_manual("Scenario", labels=c("Immediate loss",
"Immediate loss\nor extinction debt",
"Extinction debt",
"Remaining\nor extinction debt",
"Remaining"),
breaks=c("Immediate loss",
"Immediate loss\nor extinction debt",
"Extinction debt",
"Remaining\nor extinction debt",
"Remaining"),
# values=c("#FF7F80", "#FFB0B0", "#FCFCFC", "#C8BFFF", "#A997FF"))+
values=c("Immediate loss"=plot_colours[1],
"Immediate loss\nor extinction debt"=plot_colours[3],
"Extinction debt"=plot_colours[7],
"Remaining\nor extinction debt"=plot_colours[9],
"Remaining"=plot_colours[11])) +
theme_classic() + theme(aspect.ratio = 1) +
theme(legend.key.height=unit(2,"line")) +
theme(legend.key.width=unit(2,"line"))
pdf(file.path(figure_dir, "appendices", "appendix3_figure2.pdf"), 7, 5)
print(p)
dev.off()
source('~/Documents/PhD/Code/NeutralScalingFragmentation/extinction_debt_eco_let/figure_generation.R', echo=TRUE)
px <- ggplot(variable_size_data, colour="black") +
theme_classic() +
geom_ribbon(data=real_bounds,
aes(x=a_max, ymin=min_real_pc, ymax=max_real_pc,
fill="Real landscapes"),  alpha=0.6)+
geom_point(aes(x=a_max, y=100*mean_richness/contig_richness, colour=effective_connectivity))+
geom_point(data=highlighted_sims,
aes(x=a_max, y=100*mean_richness/contig_richness,
colour=effective_connectivity), shape=17, alpha=1, size=3)+
geom_line(aes(x=a_max, y=max_pc_eq, linetype="Upper"),
colour="grey20", size=1) +
geom_line(aes(x=a_max, y=min_pc_eq, linetype="Lower"), colour="grey20", size=1) +
ylab("Percentage of species\nrichness at equilibrium")+
scale_x_log10(expression(paste("Total area (", A[max], ")")),limits=c(10^2.5, 10^8),
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x)))+
scale_fill_manual(NULL, label=c("Real\nlandscapes"), values=c("grey80"))+
scale_linetype_manual("Theoretical\nlimits",breaks=c("Upper", "Lower"),
label=c("Upper", "Lower"), values=c("dotted", "dashed"))+
guides(linetype=guide_legend(keywidth = 2.5))+
scale_colour_viridis(expression(paste("Effective\nConnectivity (", c[e], ")")),
option="inferno", end=0.94)+
theme( aspect.ratio = 1)
pdf(file.path(figure_dir, "figure4.pdf"), 6.7, 5)
print(px)
dev.off()
px <- ggplot(variable_size_data, colour="black") +
theme_classic() +
geom_ribbon(data=real_bounds,
aes(x=a_max, ymin=min_real_pc, ymax=max_real_pc,
fill="Real landscapes"),  alpha=0.6)+
geom_point(aes(x=a_max, y=100*mean_richness/contig_richness, colour=effective_connectivity))+
geom_point(data=highlighted_sims,
aes(x=a_max, y=100*mean_richness/contig_richness,
colour=effective_connectivity), shape=17, alpha=1, size=3)+
geom_line(aes(x=a_max, y=max_pc_eq, linetype="Upper"),
colour="grey20", size=1) +
geom_line(aes(x=a_max, y=min_pc_eq, linetype="Lower"), colour="grey20", size=1) +
ylab("Percentage of species\nrichness at equilibrium")+
scale_x_log10(expression(paste("Total area (", A[max], ")")),limits=c(10^2.5, 10^8),
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x)))+
scale_fill_manual(NULL, label=c("Real\nlandscapes"), values=c("grey80"))+
scale_linetype_manual("Theoretical\nlimits",breaks=c("Upper", "Lower"),
label=c("Upper", "Lower"), values=c("dotted", "dashed"))+
guides(linetype=guide_legend(keywidth = 2.5))+
scale_colour_viridis(expression(paste("Effective\nConnectivity (", c[e], ")")),
option="inferno", end=0.94)+
theme( aspect.ratio = 1)
pdf(file.path(figure_dir, "figure4.pdf"), 6.7, 4)
print(px)
dev.off()
coalescence <- function(J = size, v = speciation_rate){
lineages <- rep(1,J)
N <- J
abundances <-c()
sigma <- v*(N-1)/(1-v)
while(N>1){
j <- sample(1:N,1)
randnum <- runif(1,0,1)
p_val <- sigma/(sigma + N -1)
if(randnum<p_val){
abundances <- append(abundances, lineages[j])
} else{
seqn <- seq(1, N,1)
i <- sample(seqn[seqn != j],1)
lineages[i] <- lineages[i] + lineages[j]
}
lineages <- lineages[-j]
N <- N - 1
}
abundances <- append(abundances, lineages[1])
return(abundances)
}
tmp <- coalescence(1000000, 0.0001)
tmp <- coalescence(100000, 0.0001)
tmp
# Highlight a few results on the plot
highlighted_sims <- variable_size_data %>%
filter(file %in% c("map_398_0.2_2.tif",
"random_398_0.2_2.tif",
"contrived_select_398_16.tif"))
library(tidyverse)
library(viridis)
library(lemon)
library(cowplot)
library(ggpubr)
library(ggthemr)
source("preston.R")
source("plot_colours.R")
##################
## Data reading ##
##################
# Set the input and output directories
# Folder containing the simulation results
data_dir <- "results"
# Folder to output all figures generated here to
figure_dir <- "figures"
# Folder which holds the example map files
map_dir <- "maps"
dir.create(figure_dir)
dir.create(file.path(figure_dir, "appendices"))
#################
# Data-Figure 1 #
#################
# Read the selected example simulation data and manipulate to the desired format
example_sim_data <- read.csv(file.path(data_dir, "single_sim_results.csv")) %>% select(-X) %>%
mutate(time_since_pristine = 2501 - time) %>% unique() %>%
group_by(map_file, speciation, time_since_pristine) %>%
summarise(mean_richness = mean(richness),
min_richness = quantile(richness)[1],
max_richness = quantile(richness)[5],
count=n())
example_sim_data$map_file <- factor(example_sim_data$map_file,
levels = c("random_500_0.2_48.tif",
"contrived_500_0.2_1024.tif",
"map_500_0.2_1.tif"),
labels = c("Random",
"Clustered",
"Real"))
# Generate the summary statistics for plotting the bar charts and equilibrium lines
example_sim_summary <- example_sim_data%>% group_by(map_file, speciation) %>%
filter(speciation == "False") %>%
summarise(contig_richness = mean_richness[which(time_since_pristine == 0)],
immediate_richness_max = max_richness[which(time_since_pristine == 1)],
immediate_richness_min = min_richness[which(time_since_pristine == 1)],
eq_richness_max = max_richness[which(time_since_pristine == -997499)],
eq_richness_min = min_richness[which(time_since_pristine == -997499)])
example_sim_summary_2 <- example_sim_summary %>%
mutate(immediate_loss = contig_richness - immediate_richness_max,
imm_or_ex = immediate_richness_max - immediate_richness_min,
extinction_debt = immediate_richness_min - eq_richness_max,
ex_or_remaining = eq_richness_max - eq_richness_min,
remaining = eq_richness_min) %>%
select(map_file, immediate_loss, imm_or_ex, extinction_debt, ex_or_remaining, remaining) %>%
gather(key=time, value=richness, -map_file) %>%
mutate(time = factor(time, levels=c("immediate_loss", "imm_or_ex", "extinction_debt",
"ex_or_remaining", "remaining")))
example_sim_summary <- example_sim_summary %>%
select(-speciation) %>% gather(key=time, value=richness, -map_file)
###################
# Data-Figure 2,3 #
###################
# Read simulated data from main set of simulations
coalescence_data <- read.csv(file.path(data_dir, "coalescence.csv"), header=TRUE, sep=" ") %>%
separate(file, into=c("type", "size", "proportion_cover"), sep="_", extra="drop", remove=FALSE) %>%
mutate(type=ifelse(type == "contrived", "Clustered", ifelse(type=="map", "Real", "Random"))) %>%
select(-job)
dispersal_data <- read.csv(file.path(data_dir, "dispersal.csv"), header=TRUE, sep=" ") %>%
separate(file, into=c("type", "size", "proportion_cover"), sep="_", extra="drop", remove=FALSE) %>%
mutate(type=ifelse(type == "contrived", "Clustered", ifelse(type=="map", "Real", "Random"))) %>%
select(-c(seed, mean_dispersal, mean_distance_travelled,
mean_distance_travelled_100, mean_distance_travelled_1000, stdev_dispersal,
stdev_distance_travelled, stdev_distance_travelled_100, stdev_distance_travelled_1000))
main_df <- merge(coalescence_data, dispersal_data,
by = c("file", "sigma", "type", "size", "proportion_cover")) %>%
mutate(size = as.numeric(size),
proportion_cover = as.numeric(proportion_cover),
area=size*size*proportion_cover)
# Add in data from contiguous landscape simulations
# Import the contiguous data and bind it to the same data frame
contiguous_df <- read.csv(file.path(data_dir, "contiguous_richness.csv"))
contiguous_dispersal <- read.csv(file.path(data_dir, "dispersals_contiguous.csv")) %>%
select(-c(seed, mean_distance_travelled_100000, mean_dispersal, mean_distance_travelled,
mean_distance_travelled_100, mean_distance_travelled_1000, stdev_dispersal,
stdev_distance_travelled, stdev_distance_travelled_100, stdev_distance_travelled_1000))
contiguous_df$type <- "Contiguous"
contiguous_df$proportion_cover <- 1
contiguous_df$size <- contiguous_df$area^0.5
contiguous_df_combined <- merge(contiguous_df, contiguous_dispersal)
main_df <- rbind(main_df, contiguous_df_combined)
# Calculate the means for each combination of sigma, size, proportion cover
main_df <- main_df %>% group_by(file, type, sigma, size, proportion_cover,
mean_distance_travelled_10000) %>%
summarise(richness_mean= mean(richness), richness_stdev= sd(richness)) %>%
rename(richness = richness_mean)
# Calculate our sigma_e and effective connectivity metric
main_df <- main_df %>% filter(proportion_cover != 0.5, proportion_cover != 0.25) %>% ungroup()  %>%
mutate(area=size*size*proportion_cover,
a_max = size^2,
sigma_e = estimate_sigma_rayleigh(mean_distance_travelled_10000, 10000),
effective_connectivity = sqrt(area/a_max) * sigma_e,
preston_richness = S_contig(area, 0.0001, effective_connectivity^2)) %>%
filter(size<6000) %>%
mutate(type = factor(type, labels=c("Random", "Clustered", "Real", "Contiguous"),
levels=c("Random", "Clustered", "Real", "Contiguous")))
#################
# Data-Figure 3 #
#################
# Calculate the analytical approximations of extinction debt
analytical_approx_ED <- expand.grid(proportion_cover=c(0.1, 0.2, 0.4), sigma=c(8, 16, 32),
a_max=10^seq(1, 9, 0.1)) %>%
mutate(area = proportion_cover * a_max,
s_inst_lower = S_contig(area, 0.0001, sigma_sq = sigma^2),
s_inst_upper = S_random(a_max, area, 0.0001, sigma^2),
contig_diversity = S_contig(a_max, 0.0001, sigma^2),
min_pc_inst = s_inst_lower* 100/contig_diversity,
max_pc_inst = s_inst_upper * 100/contig_diversity)
# Calculate the minimum effective connectivity for each size
min_effective_connectivity <- main_df %>% ungroup%>% group_by(sigma) %>%
summarise(min_sigma_e = max(0.45, min(na.omit(estimate_sigma_rayleigh(mean_distance_travelled_10000,
10000)))),
max_sigma_e = max(na.omit(estimate_sigma_rayleigh(mean_distance_travelled_10000,
10000))))
analytical_approx_ED <- merge(min_effective_connectivity, analytical_approx_ED) %>%
mutate(min_equilibrium = S_random_equilibrium(a_max, area, 0.0001, min_sigma_e^2),
max_equilibrium = S_random_equilibrium(a_max, area, 0.0001, max_sigma_e^2),
min_pc_equilibrium = min_equilibrium*100/contig_diversity,
max_pc_equilibrium = max_equilibrium*100/contig_diversity)
#################
# Data-Figure 4 #
#################
variable_size_data <- read.csv(file.path(data_dir, "variables_sizes.csv")) %>% select(-X) %>%
filter(sigma == 16) %>%
mutate(file=str_replace(file, pattern=".*/", replacement=""))  %>%
group_by(file, sigma, type, speciation_rate) %>%
summarise(mean_richness = mean(richness),
count=n())
variable_size_dispersal <- read.csv(file.path(data_dir, "variable_sizes_dispersal.csv")) %>%
select(-X) %>% filter(sigma == 16)
variable_size_data <- variable_size_data %>% full_join(variable_size_dispersal) %>%
mutate(sigma_e = estimate_sigma_rayleigh(mean_distance_10000, 10000),
area = a_max * 0.2,
effective_connectivity = sqrt(area/a_max) * sigma_e) %>%
filter(a_max <= 70000000, sigma==16, speciation_rate==0.0001) %>%
ungroup() %>%
mutate(min_sigma_e = min(sigma_e),
max_sigma_e = 16,
preston_richness = S_random_equilibrium(a_max, area, 0.0001, sigma_e^2),
contig_richness = S_contig(a_max, 0.0001, sigma^2),
max_richness_inst = S_random(a_max, area, 0.0001, sigma^2),
min_richness_inst = S_contig(area, 0.0001, sigma^2),
max_richness_eq = S_random_equilibrium(a_max, area, 0.0001, max_sigma_e^2),
min_richness_eq = S_random_equilibrium(a_max, area, 0.0001, min_sigma_e^2),
max_pc_inst = 100*max_richness_inst / contig_richness,
min_pc_inst = 100*min_richness_inst / contig_richness,
min_pc_eq = 100*min_richness_eq/contig_richness,
max_pc_eq = 100*max_richness_eq/contig_richness,
type = as.factor(ifelse(type == "Contrived", "Clustered", as.character(type))))
# Calculate the bounds on the real landscapes for each size
real_bounds <- variable_size_data %>% filter(type == "Real") %>%
ungroup() %>%
group_by(area) %>%
mutate(real_pc = 100*mean_richness/contig_richness,
min_real_pc = min(real_pc),
max_real_pc = max(real_pc))
# Highlight a few results on the plot
highlighted_sims <- variable_size_data %>%
filter(file %in% c("map_398_0.2_2.tif",
"random_398_0.2_2.tif",
"contrived_select_398_16.tif"))
px <- ggplot(variable_size_data, colour="black") +
theme_classic() +
geom_ribbon(data=real_bounds,
aes(x=a_max, ymin=min_real_pc, ymax=max_real_pc,
fill="Real landscapes"),  alpha=0.6)+
geom_point(aes(x=a_max, y=100*mean_richness/contig_richness, colour=effective_connectivity))+
geom_point(data=highlighted_sims,
aes(x=a_max, y=100*mean_richness/contig_richness,
colour=effective_connectivity), shape=17, alpha=1, size=3)+
geom_line(aes(x=a_max, y=max_pc_eq, linetype="Upper"),
colour="grey20", size=1) +
geom_line(aes(x=a_max, y=min_pc_eq, linetype="Lower"), colour="grey20", size=1) +
ylab("Percentage of species\nrichness at equilibrium")+
scale_x_log10(expression(paste("Total area (", A[max], ")")),limits=c(10^2.5, 10^8),
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x)))+
scale_fill_manual(NULL, label=c("Real\nlandscapes"), values=c("grey80"))+
scale_linetype_manual("Theoretical\nlimits",breaks=c("Upper", "Lower"),
label=c("Upper", "Lower"), values=c("dotted", "dashed"))+
guides(linetype=guide_legend(keywidth = 2.5))+
scale_colour_viridis(expression(paste("Effective\nConnectivity (", c[e], ")")),
option="inferno", end=0.94)+
theme( aspect.ratio = 1)
print(px)
highlighted_sims
pdf(file.path(figure_dir, "figure4.pdf"), 6.7, 4)
print(px)
dev.off()
398^2
0.2*398^2
